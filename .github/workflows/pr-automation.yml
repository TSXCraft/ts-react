name: PR Automation

on:
  pull_request:
    types: [opened, ready_for_review, reopened]

jobs:
  pr-automation:
    runs-on: ubuntu-latest
    steps:
      - name: Handle PR Automation
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const author = context.payload.pull_request.user.login;
            const allReviewers = ['GINK-SS', 'H0onnn', 'sdh20282', 'uniqueeest'];

            // PR 작성자를 제외한 리뷰어 목록 생성
            const reviewers = allReviewers.filter(reviewer => reviewer !== author);
            console.log('Filtered Reviewers:', reviewers);

            try {
              // 리뷰어 지정
              const response = await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                reviewers: reviewers
              });
              console.log('Request Reviewers Response:', response.data);
            } catch (error) {
              console.error('Error in requesting reviewers:', error);
            }

            try {
              // PR 작성자를 담당자로 지정
              const assigneeResponse = await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                assignees: [author]
              });
              console.log('Add Assignee Response:', assigneeResponse.data);
            } catch (error) {
              console.error('Error in adding assignee:', error);
            }
